{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "siteName": {
            "type": "string",
            "metadata": {
                "description": "Name of the site into which the function should be deployed"
            }
        },
        "functionName": {
            "type": "string",
            "metadata": {
                "description": "name of the function"
            },
            "defaultValue": "chefAMAConfigStore"
        }
    },
    "variables": {
        "name": {
            "site": "[parameters('siteName')]",
            "function": "[parameters('functionName')]"
        },
        "apiVersions": {
            "functions": "2016-08-01"
        },        
        "code": {
            "run": "I3IgIk5ld3RvbnNvZnQuSnNvbiINCiNyICJNaWNyb3NvZnQuV2luZG93c0F6dXJlLlN0b3JhZ2UiDQoNCiNsb2FkICJjb25zdGFudHMuY3N4Ig0KDQp1c2luZyBTeXN0ZW0uTmV0Ow0KdXNpbmcgU3lzdGVtLlRleHQ7DQp1c2luZyBOZXd0b25zb2Z0Lkpzb247DQp1c2luZyBNaWNyb3NvZnQuV2luZG93c0F6dXJlLlN0b3JhZ2UuVGFibGU7DQoNCnB1YmxpYyBzdGF0aWMgYXN5bmMgVGFzazxIdHRwUmVzcG9uc2VNZXNzYWdlPiBSdW4oSHR0cFJlcXVlc3RNZXNzYWdlIHJlcSwgSUNvbGxlY3RvcjxDb25maWdLVj4gb3V0U2V0dGluZ1RhYmxlLCBDbG91ZFRhYmxlIHNldHRpbmdUYWJsZSwgVHJhY2VXcml0ZXIgbG9nKQ0Kew0KDQogICAgLy8gSWYgdGhlIG1ldGhvZCBpcyBhIFBPU1QgdGhlbiBzdG9yZSBpbmZvcm1hdGlvbiBpbiB0aGUgdGFibGUgc3RvcmUNCiAgICAvLyBvdGhlcndpc2UgaWYgaXQgaXMgR0VULCByZXR1cm4gdGhlIHZhbHVlIGZvciB0aGUgbmFtZWQga2V5DQogICAgaWYgKHJlcS5NZXRob2QgPT0gSHR0cE1ldGhvZC5Qb3N0KSB7DQogICAgICAgIA0KICAgICAgICAvLyBnZXQgdGhlIHBheWxvYWQgZGF0YSB3aGljaCBzaG91bGQgYmUgSlNPTiBzbyBpdCBuZWVkcyB0byBiZSBkZWNvZGVkDQogICAgICAgIGR5bmFtaWMgYm9keSA9IGF3YWl0IHJlcS5Db250ZW50LlJlYWRBc1N0cmluZ0FzeW5jKCk7DQogICAgICAgIHZhciBkYXRhID0gSnNvbkNvbnZlcnQuRGVzZXJpYWxpemVPYmplY3Q8RGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4+KGJvZHkgYXMgc3RyaW5nKTsNCg0KICAgICAgICAvLyBJdGVyYXRlIGFyb3VuZCBhbGwgdGhlIGRhdGEgdGhhdCB3YXMgc2VudCB0byB0aGUgZnVuY3Rpb24gYW5kIGFkZCB0byB0aGUgdGFibGUNCiAgICAgICAgRGljdGlvbmFyeTxzdHJpbmcsIHN0cmluZz4uS2V5Q29sbGVjdGlvbiBrZXlzID0gZGF0YS5LZXlzOw0KICAgICAgICBmb3JlYWNoICggc3RyaW5nIGtleSBpbiBrZXlzICkgew0KICAgICAgICAgICAgb3V0U2V0dGluZ1RhYmxlLkFkZCgNCiAgICAgICAgICAgICAgICBuZXcgQ29uZmlnS1YoKSB7DQogICAgICAgICAgICAgICAgICAgIFBhcnRpdGlvbktleSA9IFBhcnRpdGlvbktleSwNCiAgICAgICAgICAgICAgICAgICAgUm93S2V5ID0ga2V5LA0KICAgICAgICAgICAgICAgICAgICBWYWx1ZSA9IGRhdGFba2V5XQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICk7DQogICAgICAgIH0NCiAgICANCiAgICAgICAgcmV0dXJuIHJlcS5DcmVhdGVSZXNwb25zZShIdHRwU3RhdHVzQ29kZS5PSyk7DQoNCiAgICB9IGVsc2UgaWYgKHJlcS5NZXRob2QgPT0gSHR0cE1ldGhvZC5HZXQpIHsNCiAgICAgICAgDQogICAgICAgIHN0cmluZyBrZXkgPSByZXEuR2V0UXVlcnlOYW1lVmFsdWVQYWlycygpDQogICAgICAgICAgICAgICAgICAgICAgICAuRmlyc3RPckRlZmF1bHQocSA9PiBzdHJpbmcuQ29tcGFyZShxLktleSwgImtleSIsIHRydWUpID09IDApDQogICAgICAgICAgICAgICAgICAgICAgICAuVmFsdWU7DQoNCiAgICAgICAgLy8gcmV0cmlldmUgdGhlIGNob3NlbiB2YWx1ZSBmcm9tIHRoZSB0YWJsZQ0KICAgICAgICBUYWJsZU9wZXJhdGlvbiBvcGVyYXRpb24gPSBUYWJsZU9wZXJhdGlvbi5SZXRyaWV2ZTxDb25maWdLVj4oUGFydGl0aW9uS2V5LCBrZXkpOw0KICAgICAgICBUYWJsZVJlc3VsdCByZXN1bHQgPSBzZXR0aW5nVGFibGUuRXhlY3V0ZShvcGVyYXRpb24pOw0KDQogICAgICAgIC8vIGlmIGEgcmVzdWx0IGhhcyBiZWVuIGZvdW5kIGdldCB0aGUgZGF0YQ0KICAgICAgICBpZiAocmVzdWx0LlJlc3VsdCAhPSBudWxsKSB7DQogICAgICAgICAgICBDb25maWdLViBzZXR0aW5nID0gKENvbmZpZ0tWKXJlc3VsdC5SZXN1bHQ7DQoNCiAgICAgICAgICAgIC8vIGNyZWF0ZSBhIGRpY3Rpb25hcnkgdG8gaG9sZCB0aGUgcmV0dXJuIGRhdGENCiAgICAgICAgICAgIERpY3Rpb25hcnk8c3RyaW5nLCBzdHJpbmc+IHJlc3BvbnNlRGF0YSA9IG5ldyBEaWN0aW9uYXJ5PHN0cmluZywgc3RyaW5nPigpOw0KICAgICAgICAgICAgcmVzcG9uc2VEYXRhLkFkZChrZXksIHNldHRpbmcuVmFsdWUpOw0KDQogICAgICAgICAgICByZXR1cm4gbmV3IEh0dHBSZXNwb25zZU1lc3NhZ2UoSHR0cFN0YXR1c0NvZGUuT0spIHsNCiAgICAgICAgICAgICAgICBDb250ZW50ID0gbmV3IFN0cmluZ0NvbnRlbnQoSnNvbkNvbnZlcnQuU2VyaWFsaXplT2JqZWN0KHJlc3BvbnNlRGF0YSksIEVuY29kaW5nLlVURjgsICJhcHBsaWNhdGlvbi9qc29uIikNCiAgICAgICAgICAgIH07DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICByZXR1cm4gcmVxLkNyZWF0ZVJlc3BvbnNlKEh0dHBTdGF0dXNDb2RlLkJhZFJlcXVlc3QsIHN0cmluZy5Gb3JtYXQoIlRoZSBzcGVjaWZpZWQga2V5IGNhbm5vdCBiZSBmb3VuZDogezB9Iiwga2V5KSk7DQogICAgICAgIH0NCg0KICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiByZXEuQ3JlYXRlUmVzcG9uc2UoSHR0cFN0YXR1c0NvZGUuT0ssICJOb3QgU3VwcG9ydGVkIik7DQogICAgfQ0KDQp9DQoNCnB1YmxpYyBjbGFzcyBDb25maWdLViA6IFRhYmxlRW50aXR5IHsNCiAgICBwdWJsaWMgc3RyaW5nIFZhbHVlIHsgZ2V0OyBzZXQ7IH0NCn0NCg==",
            "constants": "c3RhdGljIHN0cmluZyBQYXJ0aXRpb25LZXkgPSAiQ2hlZkFNQSI7"
        }     
    },
    "resources": [
        {
            "type": "Microsoft.Web/sites/functions",
            "name": "[concat(variables('name').site, '/', variables('name').function)]",
            "apiVersion": "[variables('apiVersions').functions]",
            "properties": {
                "config": {
                    "bindings": [
                        {
                            "authLevel": "function",
                            "name": "req",
                            "type": "httpTrigger",
                            "direction": "in",
                            "methods": [
                                "get",
                                "post"
                            ]
                        },
                        {
                            "name": "$return",
                            "type": "http",
                            "direction": "out"
                        },
                        {
                            "type": "table",
                            "name": "outSettingTable",
                            "tableName": "settings",
                            "connection": "AzureWebJobsDashboard",
                            "direction": "out"
                        },
                        {
                            "type": "table",
                            "name": "settingTable",
                            "tableName": "settings",
                            "take": 50,
                            "connection": "AzureWebJobsDashboard",
                            "direction": "in"
                        }
                    ],
                    "disabled": false
                },
                "files": {
                    "run.csx": "[base64ToString(variables('code').run)]",
                    "constants.csx": "[base64ToString(variables('code').constants)]"
                }
            }
        }      
    ],
    "outputs": {
        "name": {
            "type": "string",
            "value": "[parameters('functionName')]"
        },        
        "apiKey": {
            "type": "string",
            "value": "[listsecrets(resourceId('Microsoft.Web/sites/functions', variables('name').site, variables('name').function), '2016-08-01').key]"
        }
    }
}