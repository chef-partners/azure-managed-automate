{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "workspaceRef": {
      "type": "string"
    },

    "actionGroup": {
      "type": "array",
      "metadata": {
        "description": "List of action groups for alert actions separated by a semicolon"
      }
    },

    "deployCode": {
      "type": "string",
      "metadata": {
        "description": "4 digit code used to identify a deployment of the managed app in Azure"
      }
    },

    "location": {
      "type": "string"
    }
  },

  "variables": {
    "workspace": {
      "ref": "[parameters('workspaceRef')]"
    },

    "location": "[parameters('location')]",

    "actionGroupIds": "[parameters('actionGroup')]",

    "deployCode": "[parameters('deployCode')]",

    "alerts": [
      {
        "alertName": "linux-vm-critical-cpu",
        "alertDescription": "Critical CPU Alert on Linux",
        "query": "Perf | where TimeGenerated > now(-240m) | where ObjectName == 'Processor' and CounterName == '% Processor Time' and InstanceName == '_Total' and Computer in ((Heartbeat | where OSType has 'Linux' | distinct Computer)) | where Computer !startswith 'hn'and Computer !startswith 'wn' and Computer !startswith 'zk' and Computer !startswith 'k8s' and Computer !startswith 'aks' | summarize averagePercentCPU = avg(CounterValue) by Computer | where averagePercentCPU > 98",
        "frequencyInMinutes": 240,
        "timeWindowInMinutes": 240,
        "emailSubject": "[concat(variables('deployCode'),'-Critical-CPU-Linux')]",
        "thresholdOperator": "GreaterThan",
        "threshold": 0,
        "severity": 0
      },
      {
        "alertName": "linux-vm-critical-mem",
        "alertDescription": "Critical Memory Alert on Linux",
        "query": "Perf | where TimeGenerated > now(-240m) | where ObjectName has 'Memory' and CounterName has '% Used Memory' | where Computer !startswith 'hn'and Computer !startswith 'wn' and Computer !startswith 'zk' and Computer !startswith 'k8s' and Computer !startswith 'aks' | summarize averagePercentMemory = avg(CounterValue) by Computer | where averagePercentMemory > 95",
        "frequencyInMinutes": 240,
        "timeWindowInMinutes": 240,
        "emailSubject": "[concat(variables('deployCode'),'-Critical-Memory-Linux')]",
        "thresholdOperator": "GreaterThan",
        "threshold": 0,
        "severity": 0
      },
      {
        "alertName": "linux-vm-critical-disk",
        "alertDescription": "Critical Disk Alert on Linux",
        "query": "Perf | where TimeGenerated > now(-240m) | where ObjectName has 'Logical Disk' and CounterName has '% Used Space' and InstanceName !has '_Total' and InstanceName !has '/mnt/resource' | where Computer !startswith 'hn'and Computer !startswith 'wn' and Computer !startswith 'zk' and Computer !startswith 'k8s' and Computer !startswith 'aks' | summarize averagePercentDiskUsed = avg(CounterValue) by Computer, InstanceName | where averagePercentDiskUsed > 95",
        "frequencyInMinutes": 240,
        "timeWindowInMinutes": 240,
        "emailSubject": "[concat(variables('deployCode'),'-Critical-Disk-Linux')]",
        "thresholdOperator": "GreaterThan",
        "threshold": 0,
        "severity": 0
      },
      {
        "alertName": "linux-vm-warning-cpu",
        "alertDescription": "Warning CPU Alert on Linux",
        "query": "Perf | where TimeGenerated > now(-90m) | where ObjectName == 'Processor' and CounterName == '% Processor Time' and InstanceName == '_Total' and Computer in ((Heartbeat | where OSType has 'Linux' | distinct Computer)) | where Computer !startswith 'hn'and Computer !startswith 'wn' and Computer !startswith 'zk' and Computer !startswith 'k8s' and Computer !startswith 'aks' | where (Computer !has 'k8s' and Computer !has 'aks') | summarize averagePercentCPU = avg(CounterValue) by Computer | where averagePercentCPU between (95 .. 98)",
        "frequencyInMinutes": 90,
        "timeWindowInMinutes": 90,
        "emailSubject": "[concat(variables('deployCode'),'-Warning-CPU-Linux')]",
        "thresholdOperator": "GreaterThan",
        "threshold": 0,
        "severity": 1
      },
      {
        "alertName": "linux-vm-warning-mem",
        "alertDescription": "Warning Memory Alert on Linux",
        "query": "Perf | where TimeGenerated > now(-90m) | where ObjectName has 'Memory' and CounterName has '% Used Memory' | where Computer !startswith 'hn'and Computer !startswith 'wn' and Computer !startswith 'zk' and Computer !startswith 'k8s' and Computer !startswith 'aks' | where (Computer !has 'k8s' and Computer !has 'aks') | summarize averagePercentMemory = avg(CounterValue) by Computer | where averagePercentMemory between (85 .. 95)",
        "frequencyInMinutes": 90,
        "timeWindowInMinutes": 90,
        "emailSubject": "[concat(variables('deployCode'),'-Warning-Memory-Linux')]",
        "thresholdOperator": "GreaterThan",
        "threshold": 0,
        "severity": 1
      },
      {
        "alertName": "linux-vm-warning-disk",
        "alertDescription": "Warning Disk Alert on Linux",
        "query": "Perf | where TimeGenerated > now(-90m) | where ObjectName has 'Logical Disk' and CounterName has '% Used Space' and InstanceName !has '_Total' and InstanceName !has '/mnt/resource' | where Computer !startswith 'hn'and Computer !startswith 'wn' and Computer !startswith 'zk' and Computer !startswith 'k8s' and Computer !startswith 'aks' | where (Computer !has 'k8s' and Computer !has 'aks') | summarize averagePercentDiskUsed = avg(CounterValue) by Computer, InstanceName | where averagePercentDiskUsed between (85 .. 95)",
        "frequencyInMinutes": 90,
        "timeWindowInMinutes": 90,
        "emailSubject": "[concat(variables('deployCode'),'-Warning-Disk-Linux')]",
        "thresholdOperator": "GreaterThan",
        "threshold": 0,
        "severity": 1
      },
      {
        "alertName": "agent-heartbeat-alert-critical",
        "alertDescription": "Critical Agent Heartbeat",
        "query": "Heartbeat | summarize Last_Heartbeat = max(TimeGenerated) by Computer | where Last_Heartbeat < now(-72h)",
        "frequencyInMinutes": 1440,
        "timeWindowInMinutes": 1440,
        "emailSubject": "[concat(variables('deployCode'),'-Critical-Agent-Heartbeat')]",
        "thresholdOperator": "GreaterThan",
        "threshold": 0,
        "severity": 0
      },
      {
        "alertName": "agent-heartbeat-alert-warning",
        "alertDescription": "Warning Agent Heartbeat",
        "query": "Heartbeat | summarize Last_Heartbeat = max(TimeGenerated) by Computer | where Last_Heartbeat < now(-24h)",
        "frequencyInMinutes": 1440,
        "timeWindowInMinutes": 1440,
        "emailSubject": "[concat(variables('deployCode'),'-Warning-Agent-Heartbeat')]",
        "thresholdOperator": "GreaterThan",
        "threshold": 0,
        "severity": 1
    }      
    ],

    "apiVersions": {
      "scheduledQueryRules": "2018-04-16"
    }
  },
  "resources": [

    {
      "name": "[variables('alerts')[copyIndex()].alertName]",
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "[variables('apiVersions').scheduledQueryRules]",
      "location": "[variables('location')]",
      "copy": {
        "name": "savedSearchCopy",
        "count": "[length(variables('alerts'))]"
      },
      "tags": {
        "[concat('hidden-link:', variables('workspace').ref)]": "Resource"
      },
      "properties": {
        "description": "[variables('alerts')[copyIndex()].alertDescription]",
        "enabled": "true",
        "source": {
          "query": "[variables('alerts')[copyIndex()].query]",
          "dataSourceId": "[variables('workspace').ref]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": "[variables('alerts')[copyIndex()].frequencyInMinutes]",
          "timeWindowInMinutes": "[variables('alerts')[copyIndex()].timeWindowInMinutes]"
        },
        "action": {
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
          "severity": "[variables('alerts')[copyIndex()].severity]",
          "aznsAction": {
            "actionGroup": "[variables('actionGroupIds')]"
          },
          "trigger": {
            "thresholdOperator": "[variables('alerts')[copyIndex()].thresholdOperator]",
            "threshold": "[variables('alerts')[copyIndex()].threshold]"
          }
        }
      }
    }
  ],
  "outputs": {

  }
}